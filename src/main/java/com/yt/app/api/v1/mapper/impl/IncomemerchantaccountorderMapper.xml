<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yt.app.api.v1.mapper.IncomemerchantaccountorderMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,userid,ordernum,merchantid,username,nkname,merchantcode,type,realtimeexchange,realamount,amount,exchange,merchantexchange,amountreceived,usdtval,status,resultimg,remark,create_by,create_time,update_by,update_time,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Incomemerchantaccountorder">
	</resultMap>
	<!-- ResultMap -->
	<resultMap id="ResultMapVO"
		type="com.yt.app.api.v1.vo.IncomemerchantaccountorderVO">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Incomemerchantaccountorder">
		insert into
		incomemerchantaccountorder(id,userid,ordernum,merchantid,username,nkname,merchantcode,type,realtimeexchange,realamount,amount,exchange,merchantexchange,amountreceived,usdtval,status,resultimg,remark,create_by,create_time,update_by,update_time)
		values
		(#{id},#{userid},#{ordernum},#{merchantid},#{username},#{nkname},#{merchantcode},#{type},#{realtimeexchange},#{realamount},#{amount},#{exchange},#{merchantexchange},#{amountreceived},#{usdtval},#{status},#{resultimg},#{remark},#{create_by},#{create_time},#{update_by},#{update_time})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		incomemerchantaccountorder(id,tenant_id,userid,ordernum,merchantid,username,nkname,merchantcode,type,realtimeexchange,realamount,amount,exchange,merchantexchange,amountreceived,usdtval,status,resultimg,remark,create_by,create_time,update_by,update_time)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{tenant_id},#{userid},#{ordernum},#{merchantid},#{username},#{nkname},#{merchantcode},#{type},#{realtimeexchange},#{realamount},#{amount},#{exchange},#{merchantexchange},#{amountreceived},#{usdtval},#{status},#{resultimg},#{remark},#{create_by},#{create_time},#{update_by},#{update_time})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from
		incomemerchantaccountorder
		where id = #{id}
	</delete>
	<!-- update -->
	<update id="put"
		parameterType="com.yt.app.api.v1.entity.Incomemerchantaccountorder">
		update incomemerchantaccountorder
		<set>
			<if test="tenant_id != null">
				tenant_id= #{tenant_id},
			</if>
			<if test="userid != null">
				userid= #{userid},
			</if>
			<if test="ordernum != null">
				ordernum= #{ordernum},
			</if>
			<if test="merchantid != null">
				merchantid= #{merchantid},
			</if>
			<if test="username != null">
				username= #{username},
			</if>
			<if test="nkname != null">
				nkname= #{nkname},
			</if>
			<if test="merchantcode != null">
				merchantcode= #{merchantcode},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="realtimeexchange != null">
				realtimeexchange= #{realtimeexchange},
			</if>
			<if test="realamount != null">
				realamount= #{realamount},
			</if>
			<if test="amount != null">
				amount= #{amount},
			</if>
			<if test="exchange != null">
				exchange= #{exchange},
			</if>
			<if test="merchantexchange != null">
				merchantexchange= #{merchantexchange},
			</if>
			<if test="amountreceived != null">
				amountreceived= #{amountreceived},
			</if>
			<if test="usdtval != null">
				usdtval= #{usdtval},
			</if>
			<if test="status != null">
				status= #{status},
			</if>
			<if test="resultimg != null">
				resultimg= #{resultimg},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="create_by != null">
				create_by= #{create_by},
			</if>
			<if test="create_time != null">
				create_time= #{create_time},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id} and version = #{version}
	</update>
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountorder
		where id = #{id}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountorder
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- getMap -->
	<select id="page" parameterType="java.util.HashMap"
		resultMap="ResultMapVO">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountorder
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
			<if test="orderBy != null and Dir != null">
				order by ${orderBy} ${Dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from incomemerchantaccountorder
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountorder
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yt.app.api.v1.mapper.PayoutMerchantaccountorderMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,userid,merchantid,username,nkname,merchantcode,type,amount,onecost,deal,accname,accnumber,exchange,merchantexchange,amountreceived,status,usdtval,remark,create_by,create_time,update_by,update_time,version,ordernum,imgurl
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.PayoutMerchantaccountorder">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.PayoutMerchantaccountorder">
		insert into
		payoutmerchantaccountorder(id,userid,merchantid,username,nkname,type,merchantcode,amount,onecost,deal,accname,accnumber,exchange,merchantexchange,amountreceived,status,usdtval,remark,create_by,create_time,update_by,update_time,ordernum,imgurl)
		values
		(#{id},#{userid},#{merchantid},#{username},#{nkname},#{type},#{merchantcode},#{amount},#{onecost},#{deal},#{accname},#{accnumber},#{exchange},#{merchantexchange},#{amountreceived},#{status},#{usdtval},#{remark},#{create_by},#{create_time},#{update_by},#{update_time},#{ordernum},#{imgurl})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		payoutmerchantaccountorder(id,merchantid,username,nkname,merchantcode,amount,exchange,merchantexchange,amountreceived,status,remark,create_by,create_time,update_by,update_time,ordernum)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{merchantid},#{username},#{nkname},#{merchantcode},#{amount},#{exchange},#{merchantexchange},#{amountreceived},#{status},#{remark},#{create_by},#{create_time},#{update_by},#{update_time},#{ordernum})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from
		payoutmerchantaccountorder
		where id = #{id}
	</delete>
	<!-- update -->
	<update id="put"
		parameterType="com.yt.app.api.v1.entity.PayoutMerchantaccountorder">
		update payoutmerchantaccountorder
		<set>
			<if test="merchantid != null">
				merchantid= #{merchantid},
			</if>
			<if test="username != null">
				username= #{username},
			</if>
			<if test="nkname != null">
				nkname= #{nkname},
			</if>
			<if test="accname != null">
				accname= #{accname},
			</if>
			<if test="accnumber != null">
				accnumber= #{accnumber},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="merchantcode != null">
				merchantcode= #{merchantcode},
			</if>
			<if test="amount != null">
				amount= #{amount},
			</if>
			<if test="exchange != null">
				exchange= #{exchange},
			</if>
			<if test="merchantexchange != null">
				merchantexchange= #{merchantexchange},
			</if>
			<if test="amountreceived != null">
				amountreceived= #{amountreceived},
			</if>
			<if test="status != null">
				status= #{status},
			</if>
			<if test="usdtval != null">
				usdtval= #{usdtval},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="ordernum != null">
				ordernum= #{ordernum},
			</if>
			<if test="imgurl != null">
				imgurl= #{imgurl},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id} and version= #{version}
	</update>
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from payoutmerchantaccountorder
		where id = #{id}
	</select>

	<!--getByOrdernum -->
	<select id="getByOrdernum" parameterType="java.lang.String"  resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from payoutmerchantaccountorder
		where ordernum = #{ordernum}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from payoutmerchantaccountorder
		<where>
			1=1
			<if test="username != null and username != ''">
				and username like "%"#{username}"%"
			</if>
			<if test="userid != null and userid != ''">
				and userid = #{userid}
			</if>
			<if test="type != null">
				and type= #{type}
			</if>
			<if test="status != null">
				and status= #{status}
			</if>
			<if test="ordernum != null">
				and ordernum= #{ordernum}
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getMap -->
	<select id="page" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from payoutmerchantaccountorder
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="stime != null and etime != ''">
				and create_time BETWEEN  #{stime} AND  #{etime}
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from payoutmerchantaccountorder
		<where>
			1=1
			<if test="username != null and username != ''">
				and username like "%"#{username}"%"
			</if>
			<if test="userid != null and userid != ''">
				and userid = #{userid}
			</if>
			<if test="type != null">
				and type= #{type}
			</if>
			<if test="status != null">
				and status= #{status}
			</if>
			<if test="ordernum != null">
				and ordernum= #{ordernum}
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from payoutmerchantaccountorder
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
</mapper>
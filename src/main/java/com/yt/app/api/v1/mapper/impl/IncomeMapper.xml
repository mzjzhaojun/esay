<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.app.api.v1.mapper.IncomeMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,merchantuserid,ordernum,merchantid,merchantname,merchantcode,merchantordernum,merchantorderid,merchantonecost,merchantpay,aislecode,qrcodeaisleid,qrcodeaislename,agentid,agentordernum,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,resulturl,fewamount,notifyurl,notifystatus,remark,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Income">
	</resultMap>
	<!-- ResultMap -->
	<resultMap id="ResultMapVO"
		type="com.yt.app.api.v1.vo.IncomeVO">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Income">
		insert into
		income(id,merchantuserid,ordernum,merchantid,merchantname,merchantcode,merchantordernum,merchantorderid,merchantonecost,merchantpay,aislecode,qrcodeaisleid,qrcodeaislename,agentid,agentordernum,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,resulturl,fewamount,notifyurl,notifystatus,remark)
		values
		(#{id},#{merchantuserid},#{ordernum},#{merchantid},#{merchantname},#{merchantcode},#{merchantordernum},#{merchantorderid},#{merchantonecost},#{merchantpay},#{aislecode},#{qrcodeaisleid},#{qrcodeaislename},#{agentid},#{agentordernum},#{agentincome},#{qrcodeid},#{qrcodename},#{qrcodeordernum},#{qrcodeuserid},#{amount},#{realamount},#{status},#{successtime},#{backlong},#{create_by},#{create_time},#{update_by},#{update_time},#{qrcode},#{type},#{resulturl},#{fewamount},#{notifyurl},#{notifystatus},#{remark})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		income(id,tenant_id,merchantuserid,ordernum,merchantid,merchantname,merchantcode,merchantordernum,merchantorderid,merchantonecost,merchantpay,aislecode,qrcodeaisleid,qrcodeaislename,agentid,agentordernum,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,resulturl,fewamount,notifyurl,notifystatus,remark)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{tenant_id},#{merchantuserid},#{ordernum},#{merchantid},#{merchantname},#{merchantcode},#{merchantordernum},#{merchantorderid},#{merchantonecost},#{merchantpay},#{aislecode},#{qrcodeaisleid},#{qrcodeaislename},#{agentid},#{agentordernum},#{agentincome},#{qrcodeid},#{qrcodename},#{qrcodeordernum},#{qrcodeuserid},#{amount},#{realamount},#{status},#{successtime},#{backlong},#{create_by},#{create_time},#{update_by},#{update_time},#{qrcode},#{type},#{resulturl},#{fewamount},#{notifyurl},#{notifystatus},#{remark})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from income
		where id =
		#{id}
	</delete>
	<!-- update -->
	<update id="put" parameterType="com.yt.app.api.v1.entity.Income">
		update income
		<set>
			<if test="tenant_id != null">
				tenant_id= #{tenant_id},
			</if>
			<if test="merchantuserid != null">
				merchantuserid= #{merchantuserid},
			</if>
			<if test="ordernum != null">
				ordernum= #{ordernum},
			</if>
			<if test="merchantid != null">
				merchantid= #{merchantid},
			</if>
			<if test="merchantname != null">
				merchantname= #{merchantname},
			</if>
			<if test="merchantcode != null">
				merchantcode= #{merchantcode},
			</if>
			<if test="merchantordernum != null">
				merchantordernum= #{merchantordernum},
			</if>
			<if test="merchantorderid != null">
				merchantorderid= #{merchantorderid},
			</if>
			<if test="merchantonecost != null">
				merchantonecost= #{merchantonecost},
			</if>
			<if test="merchantpay != null">
				merchantpay= #{merchantpay},
			</if>
			<if test="aislecode != null">
				aislecode= #{aislecode},
			</if>
			<if test="qrcodeaisleid != null">
				qrcodeaisleid= #{qrcodeaisleid},
			</if>
			<if test="qrcodeaislename != null">
				qrcodeaislename= #{qrcodeaislename},
			</if>
			<if test="agentid != null">
				agentid= #{agentid},
			</if>
			<if test="agentordernum != null">
				agentordernum= #{agentordernum},
			</if>
			<if test="agentincome != null">
				agentincome= #{agentincome},
			</if>
			<if test="qrcodeid != null">
				qrcodeid= #{qrcodeid},
			</if>
			<if test="qrcodename != null">
				qrcodename= #{qrcodename},
			</if>
			<if test="qrcodeordernum != null">
				qrcodeordernum= #{qrcodeordernum},
			</if>
			<if test="qrcodeuserid != null">
				qrcodeuserid= #{qrcodeuserid},
			</if>
			<if test="amount != null">
				amount= #{amount},
			</if>
			<if test="realamount != null">
				realamount= #{realamount},
			</if>
			<if test="status != null">
				status= #{status},
			</if>
			<if test="successtime != null">
				successtime= #{successtime},
			</if>
			<if test="backlong != null">
				backlong= #{backlong},
			</if>
			<if test="create_by != null">
				create_by= #{create_by},
			</if>
			<if test="create_time != null">
				create_time= #{create_time},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="qrcode != null">
				qrcode= #{qrcode},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="resulturl != null">
				resulturl= #{resulturl},
			</if>
			<if test="fewamount != null">
				fewamount= #{fewamount},
			</if>
			<if test="notifyurl != null">
				notifyurl= #{notifyurl},
			</if>
			<if test="notifystatus != null">
				notifystatus= #{notifystatus},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id} and version = #{version}
	</update>
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		where id = #{id}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- getMap -->
	<select id="page" parameterType="java.util.HashMap"
		resultMap="ResultMapVO">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
			<if test="orderBy != null and Dir != null">
				order by ${orderBy} ${Dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from income
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
</mapper>
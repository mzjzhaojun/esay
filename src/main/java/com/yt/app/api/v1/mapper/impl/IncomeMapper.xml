<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.app.api.v1.mapper.IncomeMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,merchantuserid,ordernum,qrcodecode,merchantid,merchantname,merchantcode,channelid,merchantorderid,backforwardurl,expireddate,expiredminute,qrcodeaisleid,qrcodeaislecode,qrcodeaislename,agentid,channelname,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,collection,exchange,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,dynamic,resulturl,fewamount,notifyurl,notifystatus,incomeamount,merchantincomeamount,channelincomeamount,inipaddress,blockaddress,remark,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Income">
	</resultMap>
	<!-- ResultMap -->
	<resultMap id="ResultMapVO"
		type="com.yt.app.api.v1.vo.IncomeVO">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Income">
		insert into
		income(id,merchantuserid,ordernum,qrcodecode,merchantid,merchantname,merchantcode,channelid,merchantorderid,backforwardurl,expireddate,expiredminute,qrcodeaisleid,qrcodeaislecode,qrcodeaislename,agentid,channelname,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,collection,exchange,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,dynamic,resulturl,fewamount,notifyurl,notifystatus,incomeamount,merchantincomeamount,channelincomeamount,inipaddress,remark)
		values
		(#{id},#{merchantuserid},#{ordernum},#{qrcodecode},#{merchantid},#{merchantname},#{merchantcode},#{channelid},#{merchantorderid},#{backforwardurl},#{expireddate},#{expiredminute},#{qrcodeaisleid},#{qrcodeaislecode},#{qrcodeaislename},#{agentid},#{channelname},#{agentincome},#{qrcodeid},#{qrcodename},#{qrcodeordernum},#{qrcodeuserid},#{amount},#{collection},#{exchange},#{realamount},#{status},#{successtime},#{backlong},#{create_by},#{create_time},#{update_by},#{update_time},#{qrcode},#{type},#{dynamic},#{resulturl},#{fewamount},#{notifyurl},#{notifystatus},#{incomeamount},#{merchantincomeamount},#{channelincomeamount},#{inipaddress},#{remark})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		income(id,tenant_id,merchantuserid,ordernum,merchantid,merchantname,merchantcode,channelid,merchantorderid,backforwardurl,expireddate,expiredminute,qrcodeaisleid,qrcodeaislename,agentid,channelname,agentincome,qrcodeid,qrcodename,qrcodeordernum,qrcodeuserid,amount,realamount,status,successtime,backlong,create_by,create_time,update_by,update_time,qrcode,type,resulturl,fewamount,notifyurl,notifystatus,remark)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{tenant_id},#{merchantuserid},#{ordernum},#{merchantid},#{merchantname},#{merchantcode},#{channelid},#{merchantorderid},#{backforwardurl},#{expireddate},#{expiredminute},#{qrcodeaisleid},#{qrcodeaislename},#{agentid},#{channelname},#{agentincome},#{qrcodeid},#{qrcodename},#{qrcodeordernum},#{qrcodeuserid},#{amount},#{realamount},#{status},#{successtime},#{backlong},#{create_by},#{create_time},#{update_by},#{update_time},#{qrcode},#{type},#{resulturl},#{fewamount},#{notifyurl},#{notifystatus},#{remark})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from income
		where id =
		#{id}
	</delete>
	<!-- update -->
	<update id="put" parameterType="com.yt.app.api.v1.entity.Income">
		update income
		<set>
			<if test="tenant_id != null">
				tenant_id= #{tenant_id},
			</if>
			<if test="merchantuserid != null">
				merchantuserid= #{merchantuserid},
			</if>
			<if test="ordernum != null">
				ordernum= #{ordernum},
			</if>
			<if test="merchantid != null">
				merchantid= #{merchantid},
			</if>
			<if test="merchantname != null">
				merchantname= #{merchantname},
			</if>
			<if test="merchantcode != null">
				merchantcode= #{merchantcode},
			</if>
			<if test="channelid != null">
				channelid= #{channelid},
			</if>
			<if test="merchantorderid != null">
				merchantorderid= #{merchantorderid},
			</if>
			<if test="backforwardurl != null">
				backforwardurl= #{backforwardurl},
			</if>
			<if test="expireddate != null">
				expireddate= #{expireddate},
			</if>
			<if test="expiredminute != null">
				expiredminute= #{expiredminute},
			</if>
			<if test="qrcodeaisleid != null">
				qrcodeaisleid= #{qrcodeaisleid},
			</if>
			<if test="qrcodeaislename != null">
				qrcodeaislename= #{qrcodeaislename},
			</if>
			<if test="agentid != null">
				agentid= #{agentid},
			</if>
			<if test="channelname != null">
				channelname= #{channelname},
			</if>
			<if test="agentincome != null">
				agentincome= #{agentincome},
			</if>
			<if test="qrcodeid != null">
				qrcodeid= #{qrcodeid},
			</if>
			<if test="qrcodename != null">
				qrcodename= #{qrcodename},
			</if>
			<if test="qrcodeordernum != null">
				qrcodeordernum= #{qrcodeordernum},
			</if>
			<if test="qrcodeuserid != null">
				qrcodeuserid= #{qrcodeuserid},
			</if>
			<if test="amount != null">
				amount= #{amount},
			</if>
			<if test="realamount != null">
				realamount= #{realamount},
			</if>
			<if test="status != null">
				status= #{status},
			</if>
			<if test="successtime != null">
				successtime= #{successtime},
			</if>
			<if test="backlong != null">
				backlong= #{backlong},
			</if>
			<if test="create_by != null">
				create_by= #{create_by},
			</if>
			<if test="create_time != null">
				create_time= #{create_time},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="qrcode != null">
				qrcode= #{qrcode},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="resulturl != null">
				resulturl= #{resulturl},
			</if>
			<if test="fewamount != null">
				fewamount= #{fewamount},
			</if>
			<if test="notifyurl != null">
				notifyurl= #{notifyurl},
			</if>
			<if test="notifystatus != null">
				notifystatus= #{notifystatus},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- update -->
	<update id="updateBlock" parameterType="com.yt.app.api.v1.entity.Income">
		update income
		<set>
			<if test="blockaddress != null">
				blockaddress= #{blockaddress},
			</if>
			<if test="inipaddress != null">
				inipaddress= #{inipaddress}
			</if>
		</set>
		where id = #{id} 
	</update>
	
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		where id = #{id}
	</select>
	<!--getByOrderNum -->
	<select id="getByOrderNum" parameterType="java.lang.String"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		where ordernum= #{ordernum}
	</select>
	<!--getByMerchantOrderNum -->
	<select id="getByMerchantOrderNum"
		parameterType="java.lang.String" resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		where merchantorderid= #{ordernum}
	</select>
	<!--getByQrcodeOrderNum -->
	<select id="getByQrcodeOrderNum"
		parameterType="java.lang.String" resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		where qrcodeordernum= #{qrcodeordernum}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
				order by create_time desc LIMIT 1,20
		</where>
	</select>
	<!-- getMap -->
	<select id="page" parameterType="java.util.HashMap"
		resultMap="ResultMapVO">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="ordernum != null and ordernum != ''">
				and ordernum = #{ordernum}
			</if>
			<if test="merchantorderid != null and merchantorderid != ''">
				and merchantorderid = #{merchantorderid}  or ordernum = #{merchantorderid}
			</if>
			<if test="qrcodeordernum != null and qrcodeordernum != ''">
				and qrcodeordernum = #{qrcodeordernum}
			</if>
			<if test="qrcodeordernum != null and qrcodeordernum != ''">
				and qrcodeordernum = #{qrcodeordernum}
			</if>
			<if test="qrcodeaislecode != null and qrcodeaislecode != ''">
				and qrcodeaislecode = #{qrcodeaislecode}
			</if>
			<if test="qrcodecode != null and qrcodecode != ''">
				and qrcodecode = #{qrcodecode}
			</if>
			<if test="qrcodename != null and qrcodename != ''">
				and qrcodename = #{qrcodename}
			</if>
			<if test="amount != null and amount != ''">
				and amount = #{amount}
			</if>
			<if test="status != null and status != ''">
				and status = #{status}
			</if>
			<if test="dateval != null and dateval != ''">
				and create_time LIKE CONCAT(#{dateval} , '%')
			</if>
			<if test="qrcodeaislename != null and qrcodeaislename != ''">
				and qrcodeaislename LIKE CONCAT( '%', #{qrcodeaislename} , '%' )
			</if>
			<if test="merchantname != null and merchantname != ''">
				and merchantname LIKE CONCAT( '%', #{merchantname} , '%' )
			</if>
			<if test="stime != null and etime != ''">
				and create_time BETWEEN  #{stime} AND  #{etime}
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from income
		<where>
			1=1
			<if test="ordernum != null and ordernum != ''">
				and ordernum = #{ordernum}
			</if>
			<if test="merchantorderid != null and merchantorderid != ''">
				and merchantorderid = #{merchantorderid}  or ordernum = #{merchantorderid}
			</if>
			<if test="qrcodeordernum != null and qrcodeordernum != ''">
				and qrcodeordernum = #{qrcodeordernum}
			</if>
			<if test="qrcodeaislecode != null and qrcodeaislecode != ''">
				and qrcodeaislecode = #{qrcodeaislecode}
			</if>
			<if test="qrcodecode != null and qrcodecode != ''">
				and qrcodecode = #{qrcodecode}
			</if>
			<if test="qrcodename != null and qrcodename != ''">
				and qrcodename = #{qrcodename}
			</if>
			<if test="amount != null and amount != ''">
				and amount = #{amount}
			</if>
			<if test="status != null and status != ''">
				and status = #{status}
			</if>
			<if test="qrcodeaislename != null and qrcodeaislename != ''">
				and qrcodeaislename LIKE CONCAT( '%', #{qrcodeaislename} , '%' )
			</if>
			<if test="merchantname != null and merchantname != ''">
				and merchantname LIKE CONCAT( '%', #{merchantname} , '%' )
			</if>
			<if test="stime != null and etime != ''">
				and create_time BETWEEN  #{stime} AND  #{etime}
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
	<!-- selectAddlist -->
	<select id="selectAddlist" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			status = 50
		</where>
	</select>
	<!-- selectNotifylist -->
	<select id="selectNotifylist" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			notifystatus = 62
		</where>
	</select>
	
	<!-- selectOrderSettlelist -->
	<select id="selectOrderSettlelist" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from income
		<where>
			status = 52 and dynamic = 1 and expireddate  &lt; NOW()
		</where>
	</select>
	
	<select id="countOrder"  resultMap="ResultMapVO" >
		SELECT
		count(*)  as ordercount,
		sum(amount) as amount,
		sum(incomeamount) as incomeamount
		FROM
		income
		WHERE
		create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} + INTERVAL 1 DAY,' 00:00:00')
	</select>
	
	<select id="countSuccessOrder"  resultMap="ResultMapVO" >
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(incomeamount) as incomeamount
		FROM
		income
		WHERE
		status = 52
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} + INTERVAL 1 DAY,' 00:00:00')
	</select>
	
	<select id="countMerchantOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		merchantid = #{userid}
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} +INTERVAL 1 DAY,' 00:00:00')
	</select>

	<select id="countMerchantSuccessOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		merchantid = #{userid}
		AND status = 52
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} + INTERVAL 1 DAY,' 00:00:00')
	</select>
	
	
	<select id="countChannelOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		channelid = #{userid}
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} +INTERVAL 1 DAY,' 00:00:00')
	</select>

	<select id="countChannelSuccessOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		channelid = #{userid}
		AND status = 52
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} + INTERVAL 1 DAY,' 00:00:00')
	</select>
	
	
	<select id="countQrcodeOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		qrcodeid = #{userid}
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} +INTERVAL 1 DAY,' 00:00:00')
	</select>

	<select id="countQrcodeSuccessOrder" resultMap="ResultMapVO">
		SELECT
		count(*) as ordercount,
		sum(amount) as amount,
		sum(merchantincomeamount) as incomeamount
		FROM
		income
		WHERE
		qrcodeid = #{userid}
		AND status = 52
		AND create_time >= CONCAT(#{dateval}, ' 00:00:00')
		AND create_time &lt; CONCAT(#{dateval} + INTERVAL 1 DAY,' 00:00:00')
	</select>
</mapper>
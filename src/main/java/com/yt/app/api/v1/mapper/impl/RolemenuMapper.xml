<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.app.api.v1.mapper.RolemenuMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,role_id,menu_id,create_by,create_time,update_by,update_time,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Rolemenu">

	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Rolemenu">
		insert into
		t_sys_role_menu(id,role_id,menu_id,create_by,create_time,update_by,update_time)
		values
		(#{id},#{role_id},#{menu_id},#{create_by},#{create_time},#{update_by},#{update_time})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		t_sys_role_menu(id,tenant_id,role_id,menu_id,create_by,create_time,update_by,update_time)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id},#{item.tenant_id},#{item.role_id},#{item.menu_id},#{item.create_by},#{item.create_time},#{item.update_by},#{item.update_time})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from t_sys_role_menu
		where id = #{id}
	</delete>

	<!-- delByRoleId -->
	<delete id="delByRoleId" parameterType="java.lang.Long">
		delete from
		t_sys_role_menu
		where role_id = #{id}
	</delete>

	<!-- delByRoleId -->
	<delete id="delByMenuId" parameterType="java.lang.Long">
		delete from
		t_sys_role_menu
		where menu_id = #{id}
	</delete>
	<!-- update -->
	<update id="put"
		parameterType="com.yt.app.api.v1.entity.Rolemenu">
		update t_sys_role_menu
		<set>
			<if test="role_id!= null">
				role_id= #{role_id},
			</if>
			<if test="menu_id!= null">
				menu_id= #{menu_id},
			</if>
			<if test="update_by!= null">
				update_by= #{update_by},
			</if>
			<if test="update_time!= null">
				update_time= #{update_time},
			</if>
			<if test="version!= null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id} 
	</update>
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_role_menu
		where id = #{id}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_role_menu
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getMap -->
	<select id="map" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_role_menu
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from t_sys_role_menu
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_role_menu
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>


	<select id="selectMenuIdsByRoleIds" resultType="java.lang.Long">
		SELECT DISTINCT(menu_id)
		FROM t_sys_role_menu
		WHERE role_id IN
		<foreach collection="roleIdList" item="roleId" open="("
			close=")" separator=",">
			#{roleId}
		</foreach>
		ORDER BY menu_id
	</select>

	<resultMap id="map"
		type="com.yt.app.api.v1.vo.SysRoleReBtnPermListVO">
		<collection property="roleCodeList">
			<constructor>
				<arg column="roleCodeList" />
			</constructor>
		</collection>
	</resultMap>

	<select id="selectBtnPerm" resultMap="map">
		SELECT tsm.name, tsm.id
		menuId, tsm.path, tsm.btn_perm,
		GROUP_CONCAT(DISTINCT tsr.code)
		roleCodeList
		FROM t_sys_role_menu tsrm
		left join t_sys_menu tsm on
		tsm.id = tsrm.menu_id
		left join t_sys_role tsr on tsr.role_id =
		tsrm.role_id
		GROUP BY tsm.id
	</select>
</mapper>
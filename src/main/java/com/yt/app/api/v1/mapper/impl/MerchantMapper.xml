<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yt.app.api.v1.mapper.MerchantMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,name,nikname,code,remark,balance,usdtbalance,status,todaycost,todaycount,type,count,todayincomecount,incomecount,exchange,collection,onecost,downpoint,exchangeonecost,exchangedownpoint,incomedownpoint,agentid,agentname,create_by,create_time,update_by,update_time,backpay,clearingtype,ipaddress,tenant_id,userid,appkey,apireusultip,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Merchant">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Merchant">
		insert into
		merchant(id,name,nikname,code,remark,status,exchange,collection,type,onecost,downpoint,exchangeonecost,exchangedownpoint,incomedownpoint,agentid,agentname,create_by,create_time,update_by,update_time,backpay,clearingtype,ipaddress,userid,appkey,apireusultip)
		values
		(#{id},#{name},#{nikname},#{code},#{remark},#{status},#{exchange},#{collection},#{type},#{onecost},#{downpoint},#{exchangeonecost},#{exchangedownpoint},#{incomedownpoint},#{agentid},#{agentname},#{create_by},#{create_time},#{update_by},#{update_time},#{backpay},#{clearingtype},#{ipaddress},#{userid},#{appkey},#{apireusultip})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		merchant(id,name,nikname,code,remark,balance,status,todaycost,todaycount,count,exchange,onecost,downpoint,agentid,agentname,create_by,create_time,update_by,update_time,backpay,clearingtype,ipaddress,tenant_id,userid)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{name},#{nikname},#{code},#{remark},#{balance},#{status},#{todaycost},#{todaycount},#{count},#{exchange},#{onecost},#{downpoint},#{agentid},#{agentname},#{create_by},#{create_time},#{update_by},#{update_time},#{backpay},#{clearingtype},#{ipaddress},#{tenant_id},#{userid})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from merchant
		where id =
		#{id}
	</delete>
	<!-- update -->
	<update id="put"
		parameterType="com.yt.app.api.v1.entity.Merchant">
		update merchant
		<set>
			<if test="name != null">
				name= #{name},
			</if>
			<if test="nikname != null">
				nikname= #{nikname},
			</if>
			<if test="code != null">
				code= #{code},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="balance != null">
				balance= #{balance},
			</if>
			<if test="usdtbalance != null">
				usdtbalance = #{usdtbalance},
			</if>
			<if test="status != null">
				status= #{status},
			</if>
			<if test="todaycost != null">
				todaycost= #{todaycost},
			</if>
			<if test="todaycount != null">
				todaycount= #{todaycount},
			</if>
			<if test="todayincomecount != null">
				todayincomecount= #{todayincomecount},
			</if>
			<if test="incomecount != null">
				incomecount= #{incomecount},
			</if>
			<if test="count != null">
				count= #{count},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="exchange != null">
				exchange= #{exchange},
			</if>
			<if test="exchangedownpoint != null">
				exchangedownpoint= #{exchangedownpoint},
			</if>
			<if test="exchangeonecost != null">
				exchangeonecost= #{exchangeonecost},
			</if>
			<if test="incomedownpoint != null">
				incomedownpoint= #{incomedownpoint},
			</if>
			<if test="onecost != null">
				onecost= #{onecost},
			</if>
			<if test="collection != null">
				collection= #{collection},
			</if>
			<if test="downpoint != null">
				downpoint= #{downpoint},
			</if>
			<if test="agentid != null">
				agentid= #{agentid},
			</if>
			<if test="agentname != null">
				agentname= #{agentname},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="backpay != null">
				backpay= #{backpay},
			</if>
			<if test="clearingtype != null">
				clearingtype= #{clearingtype},
			</if>
			<if test="ipaddress != null">
				ipaddress= #{ipaddress},
			</if>
			<if test="userid != null">
				userid= #{userid},
			</if>
			<if test="apireusultip != null">
				apireusultip= #{apireusultip},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id}
	</update>
	<update id="updatetodayvalue" parameterType="java.lang.Long">
		update merchant
		set
		todaycost = 0,todaycount = 0
		where id = #{id}
	</update>

	<update id="removeagent" parameterType="java.lang.Long">
		update merchant set
		agentid = null, agentname= null where id = #{id}
	</update>

	<update id="putagent"
		parameterType="com.yt.app.api.v1.entity.Merchant">
		update merchant
		<set>
			<if test="agentid != null">
				agentid= #{agentid},
			</if>
			<if test="agentname != null">
				agentname= #{agentname},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id}
	</update>

	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		where id = #{id}
	</select>

	<!--getByUserId -->
	<select id="getByUserId" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		where userid = #{userid}
	</select>


	<!--getByUserId -->
	<select id="getByCode" parameterType="java.lang.String"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		where code = #{code}
	</select>

	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		<where>
			1=1
			<if test="name != null and name != ''">
				AND name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="nikname != null and nikname != ''">
				AND nikname LIKE CONCAT( '%', #{nikname} , '%' )
			</if>
			<if test="code != null and code != ''">
				AND code LIKE CONCAT( '%', #{code} , '%' )
			</if>
			<if test="agentname != null and agentname != ''">
				AND agentname LIKE CONCAT( '%', #{agentname} , '%' )
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="type != null">
				AND type = #{type}
			</if>
			<if test="agentid != null">
				AND agentid= #{agentid}
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>

	<!-- getListAll -->
	<select id="getListAll" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		<where>
			1=1
		</where>
	</select>

	<!-- getMap -->
	<select id="map" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		<where>
			1=1
			<if test="name != null and name != ''">
				and name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from merchant
		<where>
			1=1
			<if test="name != null and name != ''">
				AND name LIKE CONCAT( '%', #{name} , '%' )
			</if>
			<if test="nikname != null and nikname != ''">
				AND nikname LIKE CONCAT( '%', #{nikname} , '%' )
			</if>
			<if test="code != null and code != ''">
				AND code LIKE CONCAT( '%', #{code} , '%' )
			</if>
			<if test="agentname != null and agentname != ''">
				AND agentname LIKE CONCAT( '%', #{agentname} , '%' )
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="type != null">
				AND type = #{type}
			</if>
			<if test="agentid != null">
				AND agentid= #{agentid}
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yt.app.api.v1.mapper.IncomemerchantaccountrecordMapper">
	<!-- Base_Column_List -->
	<sql id="Base_Column_List">
		id,tenant_id,userid,merchantname,ordernum,type,pretotalincome,pretoincomeamount,prewithdrawamount,pretowithdrawamount,posttotalincome,posttoincomeamount,postwithdrawamount,posttowithdrawamount,update_time,update_by,create_time,create_by,remark,version
	</sql>
	<!-- ResultMap -->
	<resultMap id="ResultMap"
		type="com.yt.app.api.v1.entity.Incomemerchantaccountrecord">
	</resultMap>
	<!-- ResultMap -->
	<resultMap id="ResultMapVO"
		type="com.yt.app.api.v1.vo.IncomemerchantaccountrecordVO">
	</resultMap>
	<!-- add -->
	<insert id="post"
		parameterType="com.yt.app.api.v1.entity.Incomemerchantaccountrecord">
		insert into
		incomemerchantaccountrecord(id,userid,merchantname,ordernum,type,pretotalincome,pretoincomeamount,prewithdrawamount,pretowithdrawamount,posttotalincome,posttoincomeamount,postwithdrawamount,posttowithdrawamount,update_time,update_by,create_time,create_by,remark)
		values
		(#{id},#{userid},#{merchantname},#{ordernum},#{type},#{pretotalincome},#{pretoincomeamount},#{prewithdrawamount},#{pretowithdrawamount},#{posttotalincome},#{posttoincomeamount},#{postwithdrawamount},#{posttowithdrawamount},#{update_time},#{update_by},#{create_time},#{create_by},#{remark})
	</insert>
	<!-- batchSava -->
	<insert id="batchSava" parameterType="java.util.List">
		insert into
		incomemerchantaccountrecord(id,tenant_id,userid,merchantname,ordernum,type,pretotalincome,pretoincomeamount,prewithdrawamount,pretowithdrawamount,posttotalincome,posttoincomeamount,postwithdrawamount,posttowithdrawamount,update_time,update_by,create_time,create_by,remark)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{tenant_id},#{userid},#{merchantname},#{ordernum},#{type},#{pretotalincome},#{pretoincomeamount},#{prewithdrawamount},#{pretowithdrawamount},#{posttotalincome},#{posttoincomeamount},#{postwithdrawamount},#{posttowithdrawamount},#{update_time},#{update_by},#{create_time},#{create_by},#{remark})
		</foreach>
	</insert>
	<!-- deleteById -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from
		incomemerchantaccountrecord
		where id = #{id}
	</delete>
	<!-- update -->
	<update id="put"
		parameterType="com.yt.app.api.v1.entity.Incomemerchantaccountrecord">
		update incomemerchantaccountrecord
		<set>
			<if test="tenant_id != null">
				tenant_id= #{tenant_id},
			</if>
			<if test="userid != null">
				userid= #{userid},
			</if>
			<if test="merchantname != null">
				merchantname= #{merchantname},
			</if>
			<if test="ordernum != null">
				ordernum= #{ordernum},
			</if>
			<if test="type != null">
				type= #{type},
			</if>
			<if test="pretotalincome != null">
				pretotalincome= #{pretotalincome},
			</if>
			<if test="pretoincomeamount != null">
				pretoincomeamount= #{pretoincomeamount},
			</if>
			<if test="prewithdrawamount != null">
				prewithdrawamount= #{prewithdrawamount},
			</if>
			<if test="pretowithdrawamount != null">
				pretowithdrawamount= #{pretowithdrawamount},
			</if>
			<if test="posttotalincome != null">
				posttotalincome= #{posttotalincome},
			</if>
			<if test="posttoincomeamount != null">
				posttoincomeamount= #{posttoincomeamount},
			</if>
			<if test="postwithdrawamount != null">
				postwithdrawamount= #{postwithdrawamount},
			</if>
			<if test="posttowithdrawamount != null">
				posttowithdrawamount= #{posttowithdrawamount},
			</if>
			<if test="update_time != null">
				update_time= #{update_time},
			</if>
			<if test="update_by != null">
				update_by= #{update_by},
			</if>
			<if test="create_time != null">
				create_time= #{create_time},
			</if>
			<if test="create_by != null">
				create_by= #{create_by},
			</if>
			<if test="remark != null">
				remark= #{remark},
			</if>
			<if test="version != null">
				version= #{version}+1
			</if>
		</set>
		where id = #{id} and version = #{version}
	</update>
	<!--getById -->
	<select id="get" parameterType="java.lang.Long"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountrecord
		where id = #{id}
	</select>
	<!-- getList -->
	<select id="list" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountrecord
		<where>
			1=1
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- getMap -->
	<select id="page" parameterType="java.util.HashMap"
		resultMap="ResultMapVO">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountrecord
		<where>
			1=1
			<if test="userid != null and userid != ''">
				and userid = #{userid}
			</if>
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
			<if test="orderBy != null and dir!= null">
				order by ${orderBy} ${dir}
			</if>
			<if test="pageStart != null and pageEnd != null">
				LIMIT #{pageStart},#{pageEnd}
			</if>
		</where>
	</select>
	<!-- getCount -->
	<select id="countlist" parameterType="java.util.HashMap"
		resultType="int">
		select count(*) from incomemerchantaccountrecord
		<where>
			1=1
			<if test="userid != null and userid != ''">
				and userid = #{userid}
			</if>
			<if test="name != null and name != ''">
				and name like "%"#{name}"%"
			</if>
		</where>
	</select>
	<!-- listByArrayId -->
	<select id="listByArrayId" parameterType="java.util.HashMap"
		resultMap="ResultMap">
		select
		<include refid="Base_Column_List" />
		from incomemerchantaccountrecord
		<where>
			1=1
			<if test="array != null and array.length > 0">
				and id in
				<foreach item="item" index="index" collection="array"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
</mapper>